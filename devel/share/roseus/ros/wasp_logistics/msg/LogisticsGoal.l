;; Auto-generated. Do not edit!


(when (boundp 'wasp_logistics::LogisticsGoal)
  (if (not (find-package "WASP_LOGISTICS"))
    (make-package "WASP_LOGISTICS"))
  (shadow 'LogisticsGoal (find-package "WASP_LOGISTICS")))
(unless (find-package "WASP_LOGISTICS::LOGISTICSGOAL")
  (make-package "WASP_LOGISTICS::LOGISTICSGOAL"))

(in-package "ROS")
;;//! \htmlinclude LogisticsGoal.msg.html


(defclass wasp_logistics::LogisticsGoal
  :super ros::object
  :slots (_active _distance _liftup _liftdown ))

(defmethod wasp_logistics::LogisticsGoal
  (:init
   (&key
    ((:active __active) nil)
    ((:distance __distance) 0.0)
    ((:liftup __liftup) 0)
    ((:liftdown __liftdown) 0)
    )
   (send-super :init)
   (setq _active __active)
   (setq _distance (float __distance))
   (setq _liftup (round __liftup))
   (setq _liftdown (round __liftdown))
   self)
  (:active
   (&optional (__active :null))
   (if (not (eq __active :null)) (setq _active __active)) _active)
  (:distance
   (&optional __distance)
   (if __distance (setq _distance __distance)) _distance)
  (:liftup
   (&optional __liftup)
   (if __liftup (setq _liftup __liftup)) _liftup)
  (:liftdown
   (&optional __liftdown)
   (if __liftdown (setq _liftdown __liftdown)) _liftdown)
  (:serialization-length
   ()
   (+
    ;; bool _active
    1
    ;; float32 _distance
    4
    ;; int32 _liftup
    4
    ;; int32 _liftdown
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _active
       (if _active (write-byte -1 s) (write-byte 0 s))
     ;; float32 _distance
       (sys::poke _distance (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; int32 _liftup
       (write-long _liftup s)
     ;; int32 _liftdown
       (write-long _liftdown s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _active
     (setq _active (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; float32 _distance
     (setq _distance (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; int32 _liftup
     (setq _liftup (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _liftdown
     (setq _liftdown (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get wasp_logistics::LogisticsGoal :md5sum-) "eb138febd2383e49af85d47988e04ff4")
(setf (get wasp_logistics::LogisticsGoal :datatype-) "wasp_logistics/LogisticsGoal")
(setf (get wasp_logistics::LogisticsGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
bool active
float32 distance
int32 liftup
int32 liftdown
#float32 startpoint_x
#float32 startpoint_y
#float32 startpoint_z
#float32 startpoint_w
#float32 endpoint_x
#float32 endpoint_y
#float32 endpoint_z
#float32 endpoint_w

")



(provide :wasp_logistics/LogisticsGoal "eb138febd2383e49af85d47988e04ff4")


